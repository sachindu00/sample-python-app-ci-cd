name: CI Pipeline with Security Scan

on: [push, pull_request]

jobs:
  quality-and-sast:
    name: "Code Quality & SAST"
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.9'

      - name: Install dependencies
        run: |
          pip install pytest pylint black bandit

      - name: Run unit tests
        run: pytest -v test_app.py

      - name: Check code formatting with black
        run: |
          black --check . --diff

      - name: Run linter (pylint)
        run: pylint app.py test_app.py

      - name: Run static security scan (bandit)
        run: bandit -r . --severity-level high --confidence-level high

  container-scan:
    name: "Container Build & Vulnerability Scan"
    runs-on: ubuntu-latest
    needs: quality-and-sast
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          load: true
          tags: python-app:latest

      - name: Scan image for vulnerabilities with Trivy
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: python-app:latest
          format: 'sarif'
          output: 'trivy-results.sarif'
          severity: 'HIGH,CRITICAL'

      - name: Upload Trivy scan results to GitHub Security tab
        uses: github/codeql-action/upload-sarif@v3
        if: always()
        with:
          sarif_file: 'trivy-results.sarif'

  push-to-registry:
    name: "Push to Docker Hub"
    runs-on: ubuntu-latest
    needs: container-scan
    if: success() # Only run if the container-scan job was successful
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/python-ci-demo:latest
